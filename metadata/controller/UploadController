{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "UploadController"
    },
    "designerId": "0d54e10f-ec26-43e9-94af-bf7f30365974",
    "cn": [
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "checkAccessLevel",
                "fn": "checkAccessLevel",
                "designer|params": [
                    "items",
                    "accessLevel",
                    "grantCallback",
                    "denyCallback",
                    "failedCallback"
                ],
                "implHandler": [
                    "var me = this,\r",
                    "    ids = [];\r",
                    "\r",
                    "if (items && (Ext.isNumber(items) || Ext.isArray(items))) {\r",
                    "\r",
                    "    if (Ext.isArray(items)) {\r",
                    "        items.forEach(function(el) {\r",
                    "            ids.push(el.get('id'));\r",
                    "        });\r",
                    "    } else {\r",
                    "        ids = [items];\r",
                    "    }\r",
                    "\r",
                    "    Ext.Ajax.request({\r",
                    "        method: 'GET',\r",
                    "        url: '/api/rest/dataspace/hasAccessLevel.json',\r",
                    "        params: {\r",
                    "            objectIds: ids,\r",
                    "            accessLevel: accessLevel\r",
                    "        },\r",
                    "        success: function (response) {\r",
                    "            var ok = Ext.decode(response.responseText).hasAccessLevel;\r",
                    "            if (ok) {\r",
                    "                grantCallback();\r",
                    "            } else {\r",
                    "                if (denyCallback) {\r",
                    "                    denyCallback();\r",
                    "                }\r",
                    "            }\r",
                    "        },\r",
                    "        failure: function(response) { \r",
                    "            if (failedCallback) {\r",
                    "                failedCallback(Ext.decode(response.responseText));\r",
                    "            }\r",
                    "        }\r",
                    "    });\r",
                    "\r",
                    "} else {\r",
                    "    if (!Ext.isEmpty(items)) {\r",
                    "        if (failedCallback) {\r",
                    "            failedCallback(\"invalid argument\");\r",
                    "        }\r",
                    "    }\r",
                    "}"
                ]
            },
            "designerId": "e9b99a19-7c84-4ac0-90e3-186d08229ecf"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "initUploader",
                "fn": "initUploader",
                "designer|params": [
                    "button",
                    "container"
                ],
                "implHandler": [
                    "/* not just yet\r",
                    "this.uploader = new plupload.Uploader({\r",
                    "    'runtimes': 'html5',\r",
                    "    'browse_button': null,\r",
                    "    'drop_element': null,\r",
                    "    'max_file_size': '100gb',\r",
                    "    'chunk_size': '8192kb',\r",
                    "    'autostart': true,\r",
                    "    'url': '/api/rest/object/upload?renameifrequired=true&target='\r",
                    "});\r",
                    "\r",
                    "// disable by default\r",
                    "this.uploader.bind('PostInit', function(up) {\r",
                    "    up.disableBrowse(true);\r",
                    "    uploader.settings.cancel = false;\r",
                    "});\r",
                    "\r",
                    "*/"
                ]
            },
            "designerId": "b00ce35b-cb0f-4b3e-b2c2-690e1e462649"
        },
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "launch",
                "fn": "launch",
                "implHandler": [
                    "MyGlobals.uploadController = this;\r",
                    "\r",
                    "this.uploader = new plupload.Uploader({\r",
                    "    'runtimes': 'html5',\r",
                    "    'browse_button': null,\r",
                    "    'drop_element': null,\r",
                    "    'max_file_size': '100gb',\r",
                    "    'chunk_size': '8192kb',\r",
                    "    'autostart': true,\r",
                    "    'url': '/api/rest/object/upload?renameifrequired=true&target='\r",
                    "});\r",
                    "\r",
                    "// disable by default\r",
                    "this.uploader.bind('PostInit', function(up) {\r",
                    "    up.disableBrowse(true);\r",
                    "    uploader.settings.cancel = false;\r",
                    "});"
                ]
            },
            "designerId": "58698dd7-1cf8-497d-bef7-68525c14aa9c"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onUploadCancelTapped",
                "fn": "onUploadCancelTapped",
                "implHandler": [
                    "var me = this, tp = MyGlobals.menuPanel.getComponent('tabPanel');\r",
                    "\r",
                    "tp.remove(me.uploadQueue, true);\r",
                    "me.uploadQueue = null;"
                ]
            },
            "designerId": "240ea522-5baf-40ac-ae55-bc12816bab98"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|userClassName": "onUploadTapped",
                "fn": "onUploadTapped",
                "designer|params": [
                    "dstFolderStore"
                ],
                "implHandler": [
                    "var me = this;\r",
                    "if (!me.uploadQueue) {\r",
                    "    me.uploadQueue = MyGlobals.menuPanel.getComponent('tabPanel').add({\r",
                    "        'xtype': 'uploadqueue',\r",
                    "        'listeners': {\r",
                    "            'cancel': {\r",
                    "                'fn': me.onUploadCancelTapped,\r",
                    "                'scope': me\r",
                    "            }\r",
                    "        }\r",
                    "    });\r",
                    "}"
                ]
            },
            "designerId": "fb3de634-00bc-4940-9325-a8e19d338b68"
        }
    ]
}