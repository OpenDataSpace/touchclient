{
    "type": "Ext.Panel",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "container|animation": null,
        "cls": [
            "page"
        ],
        "hideAnimation": null,
        "id": null,
        "itemId": null,
        "padding": 0,
        "showAnimation": null,
        "style": "",
        "styleHtmlContent": true,
        "ui": "light",
        "designer|userClassName": "MainPanel",
        "hideOnMaskTap": false,
        "layout": "card"
    },
    "designerId": "c60fc65a-8086-4b8c-ae5c-953734c36aa0",
    "cn": [
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "contentContainerBack",
                "implHandler": [
                    "var cont = MyGlobals.contentContainer.down('#content'),\r",
                    "    lastObj = MyGlobals.lastObjectInContentContainer,\r",
                    "    items;\r",
                    "\r",
                    "cont.getLayout().setAnimation({\r",
                    "    type: 'slide',\r",
                    "    direction: 'right'\r",
                    "});\r",
                    "\r",
                    "\r",
                    "items = cont.items;\r",
                    "MyGlobals.lastObjectInContentContainer = cont.getAt(items.length - 2);\r",
                    "\r",
                    "if (items.length === 2 && MyGlobals.isNarrow()) {\r",
                    "    this.showMenuPanel();\r",
                    "\r",
                    "    setTimeout(function() {\r",
                    "        cont.remove(cont.getActiveItem(), true);\r",
                    "    }, 1000);    \r",
                    "\r",
                    "\r",
                    "    MyGlobals.menuPanel.deselectAllLists();\r",
                    "} else {\r",
                    "    cont.remove(cont.getActiveItem(), true);\r",
                    "    if (items.length > 1) {\r",
                    "        if (items.length === 2) {\r",
                    "            if (MyGlobals.menuPanel) {\r",
                    "                MyGlobals.menuPanel.deselectAllLists();\r",
                    "            }\r",
                    "        }\r",
                    "        cont.setActiveItem(items.length-2);\r",
                    "    }\r",
                    "}"
                ]
            },
            "designerId": "bef983fe-b826-4bef-83ac-de47fe3ae454"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "handleObject",
                "designer|params": [
                    "classObject",
                    "objectId",
                    "name",
                    "persistent",
                    "record"
                ],
                "implHandler": [
                    "var me = this,\r",
                    "    tab;\r",
                    "ACUtils.utils.checkConnectionWithFunction(function() {\r",
                    "    var previewAble = record.get(\"previewable\"),\r",
                    "        textAvailable = record.get(\"textavailable\"),\r",
                    "        isFolder = record.get(\"isfolder\");\r",
                    "\r",
                    "    if (classObject===\"mailobject\") {\r",
                    "        me.showMail(objectId, persistent);\r",
                    "    }\r",
                    "    else if (previewAble) {\r",
                    "        me.showPreview(objectId,1,persistent);\r",
                    "    }\r",
                    "    else if (textAvailable) {\r",
                    "        me.showText(objectId,persistent);\r",
                    "    }\r",
                    "    else if (isFolder) {\r",
                    "        tab = MyGlobals.menuPanel.down('#tabPanel').getActiveItem();\r",
                    "        //MyGlobals.menuPanel.down('#tabPanel').setActiveItem(me.down('#documentsBar'));\r",
                    "\r",
                    "        MyGlobals.menuPanel.navigateToFolder(objectId, name, false, tab);\r",
                    "    }\r",
                    "    else {\r",
                    "        Ext.Msg.alert('Error', 'FÃ¼r dieses Objekt ist derzeit noch keine Anzeige erstellt: '+classObject, Ext.emptyFn);   \r",
                    "    }\r",
                    "\r",
                    "});"
                ]
            },
            "designerId": "0e9afee8-a12c-42d8-a98a-f6f6f1be3ff7"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "handleOrientationChange",
                "implHandler": [
                    "var me = this;\r",
                    "ACUtils.utils.checkConnectionWithFunction(function() {\r",
                    "    //alert(\"Orient change: \"+Ext.Viewport.getOrientation());\r",
                    "\r",
                    "    var men = MyGlobals.menuPanel,\r",
                    "        isAndroidTablet = (Ext.os.deviceType === 'Tablet' && !Ext.os.is.iOS),\r",
                    "        cont = me.down('#content'),\r",
                    "        items = cont.items,\r",
                    "        itemLen = items.length,\r",
                    "        height = me.element.getHeight(),\r",
                    "        i, el;\r",
                    "\r",
                    "    if (MyGlobals.isNarrow()) {\r",
                    "        men.setHideOnMaskTap(false);\r",
                    "        men.setModal(false);\r",
                    "        men.setDocked(null);\r",
                    "        men.setTop(null);\r",
                    "        men.setLeft(null);\r",
                    "        men.setHeight(null);\r",
                    "        men.setWidth(null);\r",
                    "        MyGlobals.showListButton = false;\r",
                    "\r",
                    "        if (MyGlobals.contentContainer.down('#content').items.length > 1) {\r",
                    "            me.showInContentContainer();\r",
                    "        } else {\r",
                    "            me.showMenuPanel();\r",
                    "        }\r",
                    "\r",
                    "    } else {\r",
                    "        men.setHideOnMaskTap(true);\r",
                    "        men.setModal(true);\r",
                    "        if (isAndroidTablet) {\r",
                    "            men.setDocked(null);\r",
                    "            men.setTop(5);\r",
                    "            men.setLeft(5);\r",
                    "            men.setHeight(height - 70);\r",
                    "            men.setWidth(315);\r",
                    "            men.removeCls(\"MenuBorder\");\r",
                    "            men.hide();\r",
                    "        } else {\r",
                    "            men.setDocked(\"left\");\r",
                    "            men.setTop(null);\r",
                    "            men.setLeft(null);\r",
                    "            men.setCls(\"MenuBorder\");\r",
                    "            men.setHeight(height);\r",
                    "            men.setWidth(315);\r",
                    "            men.show();\r",
                    "        }\r",
                    "        MyGlobals.showListButton = true;\r",
                    "\r",
                    "        MyGlobals.contentContainer.show();\r",
                    "    }\r",
                    "\r",
                    "\r",
                    "    if (MyGlobals.imageViewer) {\r",
                    "        MyGlobals.imageViewer.reloadViewer();\r",
                    "    }\r",
                    "\r",
                    "    //reload content elements\r",
                    "    for (i=0; i<itemLen; i+=1) {\r",
                    "        el = cont.getAt(i);\r",
                    "        if (el.doRepaint) {\r",
                    "            el.doRepaint();\r",
                    "        }\r",
                    "    }\r",
                    "    me.restoreSidePanel();\r",
                    "    Ext.repaint();\r",
                    "});"
                ]
            },
            "designerId": "0d7bba73-c381-4156-9a24-a5e757b20c63"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "hideInfoPanel",
                "implHandler": [
                    "var me = this,\r",
                    "    ip = MyGlobals.infoPanel;\r",
                    "if (ip) {\r",
                    "    me.remove(ip, true);\r",
                    "    MyGlobals.infoPanel = null;\r",
                    "}\r",
                    "if (MyGlobals.isNarrow()) {\r",
                    "    me.setActiveItem(MyGlobals.menuPanel);\r",
                    "}"
                ]
            },
            "designerId": "3828e1ca-f4ab-4141-8568-40bc1964d49f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "hideLoader",
                "implHandler": [
                    "this.down('#contentContainer').setMasked(false);"
                ]
            },
            "designerId": "a47e4b86-dc5d-475c-88c6-124ea6342eb1"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "loadContentContainer",
                "designer|params": [
                    "container",
                    "persistent",
                    "hasPrevious",
                    "navTitle"
                ],
                "implHandler": [
                    "var cont = MyGlobals.contentContainer.down('#content'),\r",
                    "    lastObj = MyGlobals.lastObjectInContentContainer,\r",
                    "    items = cont.items,\r",
                    "    itemLen = items.length,\r",
                    "    contCon;\r",
                    "\r",
                    "if (!persistent && lastObj !== null && !lastObj.persistent) {\r",
                    "    itemLen -= 1;\r",
                    "    setTimeout(function() {\r",
                    "        console.log(\"removing last: \" + lastObj);\r",
                    "        cont.remove(lastObj, true);\r",
                    "    }, 1000);\r",
                    "}\r",
                    "\r",
                    "if (cont.getLayout && cont.getLayout().setAnimation) {\r",
                    "    cont.getLayout().setAnimation({\r",
                    "        type: 'slide',\r",
                    "        direction: 'left'\r",
                    "    });\r",
                    "}\r",
                    "\r",
                    "contCon = Ext.create('ACMobileClient.view.ContentContainer', {});\r",
                    "contCon.hasPrevious = hasPrevious;\r",
                    "if (hasPrevious) {\r",
                    "    if (itemLen > 0) {\r",
                    "        contCon.navTitle =  cont.getAt(itemLen-1).prevNavTitle;\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "contCon.persistent = container.persistent;\r",
                    "contCon.add(container);\r",
                    "\r",
                    "\r",
                    "cont.add(contCon);\r",
                    "cont.setActiveItem(contCon);\r",
                    "contCon.prevNavTitle = navTitle;\r",
                    "MyGlobals.lastObjectInContentContainer = contCon;\r",
                    "this.showInContentContainer();\r",
                    "\r",
                    "if (MyGlobals.isNarrow()) {\r",
                    "    // hide menu panel when showing something in container\r",
                    "    setTimeout(function() {\r",
                    "        var men;\r",
                    "        if (MyGlobals.showListButton)  {\r",
                    "            men = MyGlobals.menuPanel;\r",
                    "            men.deselectAllLists();\r",
                    "            men.hide();\r",
                    "        }\r",
                    "    }, 20);\r",
                    "}"
                ]
            },
            "designerId": "c6832764-11e8-4637-9d64-5a527640100e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "loadQuickSearchAreas",
                "implHandler": [
                    "var theOr = '';\r",
                    "\r",
                    "MyGlobals.areaIds = '';\r",
                    "\r",
                    "Ext.Ajax.request({\r",
                    "    url: '/api/rest/object.json',\r",
                    "    method: 'get',\r",
                    "    params: { \r",
                    "        sessionId: MyGlobals.sessionId,\r",
                    "        provider: 'area',\r",
                    "        source: 'MAIN_MODULE_MANAGEMENT/mobileclient/control/areas',\r",
                    "        page: 1,\r",
                    "        start: 0,\r",
                    "        limit: 2000,\r",
                    "        noCache: new Date().getTime()\r",
                    "    },\r",
                    "    success: function(response) {\r",
                    "        var jsonResp = Ext.decode(response.responseText),\r",
                    "            areas = jsonResp.data,\r",
                    "            i;\r",
                    "        for (i = 0; i < areas.length; i+=1) {\r",
                    "            MyGlobals.areaIds += theOr + \"inpath:\" + areas[i].id;\r",
                    "            theOr = \" OR \";\r",
                    "        }\r",
                    "    },\r",
                    "    failure: function() {\r",
                    "    },\r",
                    "    scope: this\r",
                    "});"
                ]
            },
            "designerId": "12cf3867-d942-4763-8244-d2ab793d22c2"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "loadNextPage",
                "implHandler": [
                    "if (MyGlobals.imageViewer.pageCount > MyGlobals.imageViewer.pageNumber) {\r",
                    "    this.showPreview(MyGlobals.imageViewer.objectId,  MyGlobals.imageViewer.pageNumber+1);\r",
                    "}"
                ]
            },
            "designerId": "deac31eb-2bc6-4287-b83f-864a95874e45"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "loadPrevPage",
                "implHandler": [
                    "if (MyGlobals.imageViewer.pageNumber > 1) {\r",
                    "    this.showPreview(MyGlobals.imageViewer.objectId,  MyGlobals.imageViewer.pageNumber-1);\r",
                    "}"
                ]
            },
            "designerId": "a4386d7e-1858-4572-9405-b2b4532afbe3"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "restoreSidePanel",
                "implHandler": [
                    "var me = this,\r",
                    "    iPanel = MyGlobals.infoPanel,\r",
                    "    height, width;\r",
                    "if (iPanel) {\r",
                    "    if (MyGlobals.isNarrow()) {\r",
                    "        iPanel.setTop(null);\r",
                    "        iPanel.setLeft(null);\r",
                    "        iPanel.setHeight(null);\r",
                    "        iPanel.setWidth(null);\r",
                    "        me.getLayout().setAnimation({\r",
                    "            type: 'slide',\r",
                    "            direction: 'left'\r",
                    "        });\r",
                    "        me.setActiveItem(iPanel);\r",
                    "    } else {\r",
                    "        height = me.element.getHeight();\r",
                    "        width = me.down('#contentContainer').element.getWidth();\r",
                    "        iPanel.setDocked(null);\r",
                    "        iPanel.setShowAnimation(\"slideIn\");\r",
                    "        iPanel.setHideAnimation({\r",
                    "            type: 'slideOut',\r",
                    "            direction: 'right'\r",
                    "        });\r",
                    "        iPanel.setTop(0);\r",
                    "        iPanel.setLeft(width-320);\r",
                    "        iPanel.setHeight(height);\r",
                    "        iPanel.setWidth(320);\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    ""
                ]
            },
            "designerId": "a27be711-125c-4ffa-9698-11bf7b29f553"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "showInContentContainer",
                "implHandler": [
                    "var me = this, cc = MyGlobals.contentContainer;\r",
                    "if (MyGlobals.isNarrow()) {\r",
                    "    me.getLayout().setAnimation({\r",
                    "        type: 'slide',\r",
                    "        direction: 'left'\r",
                    "    });\r",
                    "    me.setActiveItem(cc);\r",
                    "}"
                ]
            },
            "designerId": "95c8b0be-1109-4318-894f-c3c02063e071"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "showInfoPanelSlided",
                "designer|params": [
                    "objectId",
                    "noteId",
                    "className"
                ],
                "implHandler": [
                    "var me = this,\r",
                    "    iPanel;\r",
                    "\r",
                    "if (MyGlobals.infoPanel) {\r",
                    "    me.remove(MyGlobals.infoPanel, true);\r",
                    "    MyGlobals.infoPanel = null;\r",
                    "}\r",
                    "\r",
                    "iPanel = Ext.create('ACMobileClient.view.InfoPanel', {});\r",
                    "iPanel.load(objectId);\r",
                    "\r",
                    "\r",
                    "if (className && className === 'noteobject') {\r",
                    "    //switch not note view\r",
                    "    iPanel.showNote(noteId);\r",
                    "}\r",
                    "\r",
                    "me.add(iPanel);\r",
                    "iPanel.hide();\r",
                    "\r",
                    "iPanel.loadCallback = function() {\r",
                    "    var height, width;\r",
                    "\r",
                    "    if (MyGlobals.isNarrow()) {\r",
                    "        me.getLayout().setAnimation({\r",
                    "            type: 'slide',\r",
                    "            direction: 'left'\r",
                    "        });\r",
                    "        me.setActiveItem(iPanel);    \r",
                    "    } else {\r",
                    "        height = me.element.getHeight();\r",
                    "        width = me.down('#contentContainer').element.getWidth();\r",
                    "        iPanel.setDocked(null);\r",
                    "        iPanel.setShowAnimation(\"slideIn\");\r",
                    "        iPanel.setHideAnimation({\r",
                    "            type: 'slideOut',\r",
                    "            direction: 'right'\r",
                    "        });\r",
                    "        iPanel.setTop(0);\r",
                    "        iPanel.setLeft(width-320);\r",
                    "        iPanel.setHeight(height);\r",
                    "        iPanel.setWidth(320);\r",
                    "        iPanel.addCls('shadowPanel');\r",
                    "\r",
                    "        iPanel.show();\r",
                    "    }\r",
                    "};\r",
                    "\r",
                    "MyGlobals.infoPanel = iPanel;\r",
                    ""
                ]
            },
            "designerId": "f87cc73b-25b5-4b80-8ccc-e5c3d797fd16"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "showLoader",
                "implHandler": [
                    "this.down('#contentContainer').setMasked({ \r",
                    "    xtype: 'loadmask', \r",
                    "    message: 'loading' \r",
                    "});"
                ]
            },
            "designerId": "de39e6c9-3fd8-4f94-95e0-b5f70007a434"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "showMail",
                "designer|params": [
                    "objectId",
                    "persistent"
                ],
                "implHandler": [
                    "var me = this;\r",
                    "ACUtils.utils.checkConnectionWithFunction(function() {\r",
                    "    var mailView = Ext.create(\"ACMobileClient.view.MailViewContainer\", {});\r",
                    "    mailView.load(objectId);\r",
                    "    me.loadContentContainer(mailView,persistent,true,\"Mail\");\r",
                    "});"
                ]
            },
            "designerId": "6a95c9fb-a362-4bd4-961b-ffbbef555cb3"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "showMenuPanel",
                "implHandler": [
                    "if (MyGlobals.isNarrow()) {\r",
                    "    this.getLayout().setAnimation({\r",
                    "        type: 'slide',\r",
                    "        direction: 'right'\r",
                    "    });\r",
                    "    this.setActiveItem(MyGlobals.menuPanel);\r",
                    "}"
                ]
            },
            "designerId": "34ded362-c0e3-4f4b-ad05-279e358a8770"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "showPreview",
                "designer|params": [
                    "objectId",
                    "page",
                    "persistent"
                ],
                "implHandler": [
                    "var me = this;\r",
                    "ACUtils.utils.checkConnectionWithFunction(function() {\r",
                    "    //precreate a preview container\r",
                    "    var previewContainer = Ext.create(\"ACMobileClient.view.PreviewContainer\", {});\r",
                    "    MyGlobals.previewContrainer = previewContainer;\r",
                    "    previewContainer.down('#previewCarousel').loadPreview(objectId, page, previewContainer);\r",
                    "\r",
                    "    me.loadContentContainer(previewContainer,persistent,true,\"Document\");\r",
                    "});"
                ]
            },
            "designerId": "5e30f20c-8fa5-410d-9dcc-7bcd0a93e73f"
        },
        {
            "type": "basiceventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onPanelShow",
                "implHandler": [
                    "var me = this,\r",
                    "    contentContainer = me.down('#contentContainer'),\r",
                    "    men, logoContainer;\r",
                    "\r",
                    "MyGlobals.mainPanel = me;\r",
                    "\r",
                    "//create the menu panel\r",
                    "if (MyGlobals.isNarrow()) {\r",
                    "    men = Ext.create(\"ACMobileClient.view.MenuPanel\", {});\r",
                    "} else {\r",
                    "    men = Ext.create(\"ACMobileClient.view.MenuPanel\", {\r",
                    "        modal: true,\r",
                    "        hideOnMaskTap: true\r",
                    "    });\r",
                    "}\r",
                    "if (MyGlobals.isPhone) {\r",
                    "    men.setStyle(\"font-size:1.25em\");\r",
                    "}\r",
                    "\r",
                    "\r",
                    "//remember the panel in the globals to reuse it on another place\r",
                    "MyGlobals.menuPanel = men;    \r",
                    "me.add(men);\r",
                    "\r",
                    "men.navigateToFolder('', \"Start\", true, this.down('#documentsBar'));\r",
                    "men.navigateToFolder('', \"Start\", true, this.down('#sharedFolders'));\r",
                    "\r",
                    "//register event for orientation change\r",
                    "Ext.Viewport.on('orientationchange', 'handleOrientationChange', me,  {buffer: 50 });\r",
                    "\r",
                    "MyGlobals.contentContainer = contentContainer;\r",
                    "logoContainer = Ext.create(\"ACMobileClient.view.LogoContainer\", {});\r",
                    "logoContainer.persistent = true;\r",
                    "MyGlobals.lastObjectInContentContainer = logoContainer;\r",
                    "me.loadContentContainer(logoContainer, true, false, \"Start\");\r",
                    "\r",
                    "//init the view\r",
                    "me.handleOrientationChange();\r",
                    "\r",
                    "me.showMenuPanel();\r",
                    "me.loadQuickSearchAreas();\r",
                    ""
                ],
                "name": "show"
            },
            "designerId": "2236b835-69a7-426d-939d-75c1e0db2d52"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "showText",
                "designer|params": [
                    "objectId",
                    "persistent"
                ],
                "implHandler": [
                    "var me = this;\r",
                    "ACUtils.utils.checkConnectionWithFunction(function() {\r",
                    "    var textView = Ext.create(\"ACMobileClient.view.TextViewContainer\", {});\r",
                    "    textView.load(objectId);\r",
                    "    me.loadContentContainer(textView,persistent,true,\"Document\");\r",
                    "});"
                ]
            },
            "designerId": "ce832e30-d9fa-44d3-80ca-a2fca619def2"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "switchToRoot",
                "designer|params": [
                    "obj"
                ],
                "implHandler": [
                    "//reset to root\r",
                    "//remove all other items\r",
                    "var me = obj,\r",
                    "    toRemove = me.getInnerItems().slice(1);\r",
                    "\r",
                    "console.log(\"switch to root\");\r",
                    "\r",
                    "me.getLayout().setAnimation({\r",
                    "    type: 'slide',\r",
                    "    direction: 'right'\r",
                    "});\r",
                    "\r",
                    "me.setActiveItem(0);\r",
                    "setTimeout(function() {\r",
                    "    toRemove.forEach(function (el) {\r",
                    "        me.remove(el, true);\r",
                    "    });\r",
                    "}, 500);\r",
                    ""
                ]
            },
            "designerId": "ac28d0bb-6415-4021-af6a-85f5361f4476"
        },
        {
            "type": "Ext.Container",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "itemId": "contentContainer",
                "showAnimation": null,
                "style": "font-size:1.25em",
                "ui": "light",
                "layout": "fit"
            },
            "designerId": "36f9cb69-46e5-45fd-a8d8-bf97c8ad0fcc",
            "cn": [
                {
                    "type": "basiceventbinding",
                    "reference": {
                        "name": "listeners",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "fn": "onContentContainerAdd",
                        "implHandler": [
                            "this.down('#contentContainer').setMasked(false);"
                        ],
                        "name": "add"
                    },
                    "designerId": "eb55d32a-7b52-488b-9bea-a91eb6f1591d"
                },
                {
                    "type": "Ext.Container",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "container|animation": "slide",
                        "itemId": "content",
                        "layout": "card"
                    },
                    "designerId": "5486c1f4-e09d-4859-82cb-a05e22c219ab"
                }
            ]
        }
    ]
}