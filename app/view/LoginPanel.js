/*
 * File: app/view/LoginPanel.js
 *
 * This file was generated by Sencha Architect version 2.2.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ACMobileClient.view.LoginPanel', {
    extend: 'Ext.Panel',

    config: {
        cls: 'logoBack',
        fullscreen: true,
        items: [
            {
                xtype: 'formpanel',
                centered: true,
                height: 280,
                itemId: 'loginForm',
                padding: 10,
                showAnimation: 'slideIn',
                style: '',
                width: 300,
                url: '/api/rest/session/login',
                items: [
                    {
                        xtype: 'toolbar',
                        docked: 'top',
                        title: 'Login'
                    },
                    {
                        xtype: 'fieldset',
                        itemId: 'loginFieldSet',
                        width: 250,
                        items: [
                            {
                                xtype: 'textfield',
                                border: '',
                                itemId: 'userName',
                                width: '',
                                label: 'Username:',
                                labelWidth: 100,
                                name: 'username'
                            },
                            {
                                xtype: 'passwordfield',
                                itemId: 'passWord',
                                label: 'Password:',
                                labelWidth: 100,
                                name: 'password'
                            },
                            {
                                xtype: 'checkboxfield',
                                itemId: 'rememberLogin',
                                label: 'Remember Me:',
                                labelWidth: 180,
                                name: 'rememberLogin'
                            }
                        ]
                    },
                    {
                        xtype: 'button',
                        id: '',
                        itemId: 'loginButton',
                        ui: 'action-round',
                        width: 150,
                        text: 'Login'
                    }
                ]
            }
        ],
        listeners: [
            {
                fn: 'onUserNameAction',
                event: 'action',
                delegate: '#userName'
            },
            {
                fn: 'onPassWordAction',
                event: 'action',
                delegate: '#passWord'
            },
            {
                fn: 'onLoginButtonTap',
                event: 'tap',
                delegate: '#loginButton'
            },
            {
                fn: 'onPanelPainted',
                event: 'painted'
            }
        ]
    },

    onUserNameAction: function(textfield, e, eOpts) {
        this.down('#passWord').focus();
    },

    onPassWordAction: function(textfield, e, eOpts) {
        this.doLogin();
    },

    onLoginButtonTap: function(button, e, eOpts) {
        this.doLogin();
    },

    onPanelPainted: function(component, eOpts) {
        if (ACUtils.utils.isAutoLogin()) {
            this.down('#userName').setValue(ACUtils.utils.getUserName());
            this.down('#passWord').setValue(ACUtils.utils.getPassWord());
            this.down('#rememberLogin').check();
            this.doLogin();
        }
    },

    doLogin: function() {
        var me = this;

        me.down('#userName').blur();
        me.down('#passWord').blur();

        Ext.Viewport.setMasked({
            xtype: 'loadmask',
            message: 'Logging in'
        });

        ACUtils.utils.login(
        me.down('#userName').getValue(),
        me.down('#passWord').getValue(),
        function(sessionId) {
            console.log("SessionId: "+MyGlobals.sessionId);
            ACUtils.utils.storedUser=me.down('#userName').getValue();
            ACUtils.utils.storedPassWord=me.down('#passWord').getValue();

            if (me.down('#rememberLogin').getChecked()) {
                //save login data for next reuse
                ACUtils.utils.saveLogin(ACUtils.utils.storedUser, ACUtils.utils.storedPassWord);
            }
            else {
                //save login data for next reuse
                ACUtils.utils.removeLogin();
            }


            //load language
            var lang = "de";
            var url = "app/languages/"+lang+"/Messages.js";

            Ext.Ajax.request({
                url: url,
                method: 'get',
                params: { 
                    noCache: new Date().getTime()
                },
                success: function(response) {
                    /* On success, the response contains a
                    * Language definition class which is the reason
                    * for the eval here.
                    */
                    eval(response.responseText);

                    Ext.Viewport.setMasked(false);
                    me.hide();
                    me.remove();

                    //load main page
                    var vpMain = Ext.create("ACMobileClient.view.ViewportMain", {});
                    vpMain.show();
                },
                scope: me
            });
        }, 
        function() {
            Ext.Viewport.setMasked(false);
            Ext.Msg.alert('Error', 'Login fehlgeschlagen, Benutzername/Kennwort nicht korrekt?', Ext.emptyFn);

        }
        );
    }

});