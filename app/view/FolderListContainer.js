/*
 * File: app/view/FolderListContainer.js
 *
 * This file was generated by Sencha Architect version 2.2.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ACMobileClient.view.FolderListContainer', {
    extend: 'Ext.Container',
    alias: 'widget.folderListContainer',

    config: {
        layout: {
            type: 'fit'
        },
        items: [
            {
                xtype: 'titlebar',
                docked: 'top',
                itemId: 'titleBar',
                layout: {
                    align: 'center',
                    type: 'hbox'
                },
                items: [
                    {
                        xtype: 'button',
                        itemId: 'backButton',
                        maxWidth: 100,
                        ui: 'back',
                        iconMask: true,
                        text: 'Back'
                    },
                    {
                        xtype: 'button',
                        align: 'right',
                        itemId: 'actionButton',
                        iconCls: 'list',
                        iconMask: true
                    }
                ]
            }
        ],
        listeners: [
            {
                fn: 'onBackButtonTap',
                event: 'tap',
                delegate: '#backButton'
            },
            {
                fn: 'onContainerActivate',
                event: 'activate'
            },
            {
                fn: 'onContainerInitialize',
                event: 'initialize'
            }
        ]
    },

    onBackButtonTap: function(button, e, eOpts) {
        button.disable();
        MyGlobals.menuPanel.navigateToParent2(this);
        //MyGlobals.menuPanel.navigateToParent();
    },

    onContainerActivate: function(container, newActiveItem, oldActiveItem, eOpts) {
        this.down('#documentList').deselectAll();
    },

    onContainerInitialize: function(component, eOpts) {
        myTpl = new Ext.XTemplate(
        '<div class="list_style">',
        '<div class="list_icons">',
        '<div class="list_icon list_icon_{classname}"></div>',
        '</div>',
        '<div class="list_entry">{[this.testing(name)]}{name}</div>',
        '</div>',
        {
            // XTemplate configuration:
            disableFormats: true,
            // just a sample
            testing: function(){
                return '';
            }
        }
        );

        var list = Ext.create('ACMobileClient.view.FolderListList', {
            itemId: 'documentList',
            itemTpl: myTpl
        });
        this.add(list);
    }

});